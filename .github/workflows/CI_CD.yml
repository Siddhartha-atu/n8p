name: Deploy n8n Workflows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build n8n Docker image
        run: |
          docker build -t n8n-app .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Test SSH Connection to EC2
        run: ssh -o StrictHostKeyChecking=no ubuntu@$EC2_HOST "echo 'SSH Connection Successful!'"
        env:
          EC2_HOST: 52.215.250.161

      - name: Deploy to EC2 instance
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@$EC2_HOST << 'EOF'
            # Update system
            sudo apt update -y && sudo apt upgrade -y
            
            # Install Docker if not present
            if ! command -v docker &> /dev/null; then
              sudo apt install -y docker.io docker-compose
              sudo systemctl enable docker
              sudo systemctl start docker
              sudo usermod -aG docker ubuntu
            fi

            # Stop and remove existing n8n container if running
            if [ "$(sudo docker ps -q -f name=n8n)" ]; then
              sudo docker stop n8n
              sudo docker rm n8n
            fi

            # Pull the latest n8n image
            sudo docker pull n8nio/n8n:latest

            # Run n8n container
            sudo docker run -d \
              --name n8n \
              -p 5678:5678 \
              -v ~/.n8n:/root/.n8n \
              -e N8N_HOST=$EC2_HOST \
              -e N8N_PORT=5678 \
              -e N8N_PROTOCOL=http \
              -e TZ=UTC \
              n8nio/n8n:latest
          EOF
        env:
          EC2_HOST: 52.215.250.161
